const t=new class{constructor(t){this.board=t,this.status="idle",this.score=0}moveLeft(){let t=!1;for(let e=0;e<4;e++){let s=this.board[e],{newRow:r,gainedScore:o}=this.compressRow(s);this.areRowEqual(s,r)||(this.board[e]=r,t=!0,this.score+=o)}t&&this.addRandomTile(),this.updateStatus()}moveRight(){let t=JSON.stringify(this.board);for(let t=0;t<4;t++){let e=[...this.board[t]].reverse(),{newRow:s,gainedScore:r}=this.compressRow(e);this.board[t]=s.reverse(),this.score+=r}JSON.stringify(this.board)!==t&&this.addRandomTile(),this.updateStatus()}moveUp(){let t=JSON.stringify(this.board);for(let t=0;t<4;t++){let e=[this.board[0][t],this.board[1][t],this.board[2][t],this.board[3][t]],{newRow:s,gainedScore:r}=this.compressRow(e);for(let e=0;e<4;e++)this.board[e][t]=s[e];this.score+=r}JSON.stringify(this.board)!==t&&this.addRandomTile(),this.updateStatus()}moveDown(){let t=JSON.stringify(this.board);for(let t=0;t<4;t++){let e=[this.board[3][t],this.board[2][t],this.board[1][t],this.board[0][t]],{newRow:s,gainedScore:r}=this.compressRow(e);for(let e=0;e<4;e++)this.board[3-e][t]=s[e];this.score+=r}JSON.stringify(this.board)!==t&&this.addRandomTile(),this.updateStatus()}getScore(){return this.score}getState(){return this.board}getStatus(){return this.status}start(){this.board=[,,,,].fill().map(()=>[,,,,].fill(0)),this.score=0,this.status="playing",this.addRandomTile(),this.addRandomTile()}restart(){this.start()}addRandomTile(){let t=[];for(let e=0;e<4;e++)for(let s=0;s<4;s++)0===this.board[e][s]&&t.push({row:e,col:s});let e=Math.floor(Math.random()*t.length),{row:s,col:r}=t[e],o=.9>Math.random()?2:4;this.board[s][r]=o}compressRow(t){let e=t.filter(t=>0!==t),s=0;for(let t=0;t<e.length-1;t++)e[t]===e[t+1]&&(e[t]*=2,e[t+1]=0,s+=e[t],t++);let r=4-(e=e.filter(t=>0!==t)).length;for(let t=0;t<r;t++)e.push(0);return{newRow:e,gainedScore:s}}areRowEqual(t,e){return t.every((t,s)=>t===e[s])}updateStatus(){for(let t of this.board)if(t.includes(2048)){this.status="win";return}for(let t of this.board)if(t.includes(0)){this.status="playing";return}for(let t=0;t<4;t++)for(let e=0;e<4;e++){let s=this.board[t][e];if(e<3&&s===this.board[t][e+1]||t<3&&s===this.board[t+1][e]){this.status="playing";return}}this.status="lose"}},e=document.querySelectorAll(".field-cell"),s=document.querySelector(".game-score"),r=document.querySelector(".message-start"),o=document.querySelector(".message-win"),a=document.querySelector(".message-lose"),i=document.querySelector(".button.start"),d=()=>{let i=t.getState(),d=t.getScore(),l=t.getStatus();s.textContent=d;for(let t=0;t<e.length;t++){let s=e[t],r=Math.floor(t/4),o=t%4,a=i[r][o];0===a?s.textContent="":s.textContent=a,s.className="field-cell",a>0&&s.classList.add(`field-cell--${a}`)}r.classList.add("hidden"),o.classList.add("hidden"),a.classList.add("hidden"),"win"===l?o.classList.remove("hidden"):"lose"===l&&a.classList.remove("hidden")};document.addEventListener("keydown",e=>{if("playing"===t.getStatus()){switch(e.key){case"ArrowLeft":t.moveLeft();break;case"ArrowRight":t.moveRight();break;case"ArrowUp":t.moveUp();break;case"ArrowDown":t.moveDown()}d()}}),i.addEventListener("click",()=>{"idle"===t.getStatus()?t.start():t.restart(),i.classList.remove("start"),i.classList.add("restart"),i.textContent="Restart",d()});
//# sourceMappingURL=index.10196deb.js.map
