{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */ var $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game(initialState) {\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.board = initialState;\n        this.status = \"idle\";\n        this.score = 0;\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var moved = false;\n                for(var row = 0; row < 4; row++){\n                    var currentRow = this.board[row];\n                    var _this_compressRow = this.compressRow(currentRow), newRow = _this_compressRow.newRow, gainedScore = _this_compressRow.gainedScore;\n                    if (!this.areRowEqual(currentRow, newRow)) {\n                        this.board[row] = newRow;\n                        moved = true;\n                        this.score += gainedScore;\n                    }\n                }\n                if (moved) this.addRandomTile();\n                this.updateStatus();\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var prevState = JSON.stringify(this.board);\n                for(var row = 0; row < 4; row++){\n                    var reverseRow = (0, $227c6742e0ff6f82$export$71511d61b312f219)(this.board[row]).reverse();\n                    var _this_compressRow = this.compressRow(reverseRow), newRow = _this_compressRow.newRow, gainedScore = _this_compressRow.gainedScore;\n                    this.board[row] = newRow.reverse();\n                    this.score += gainedScore;\n                }\n                var newState = JSON.stringify(this.board);\n                if (newState !== prevState) this.addRandomTile();\n                this.updateStatus();\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var prevState = JSON.stringify(this.board);\n                for(var col = 0; col < 4; col++){\n                    var column = [\n                        this.board[0][col],\n                        this.board[1][col],\n                        this.board[2][col],\n                        this.board[3][col]\n                    ];\n                    var _this_compressRow = this.compressRow(column), newRow = _this_compressRow.newRow, gainedScore = _this_compressRow.gainedScore;\n                    for(var row = 0; row < 4; row++)this.board[row][col] = newRow[row];\n                    this.score += gainedScore;\n                }\n                var newState = JSON.stringify(this.board);\n                if (newState !== prevState) this.addRandomTile();\n                this.updateStatus();\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                var prevState = JSON.stringify(this.board);\n                for(var col = 0; col < 4; col++){\n                    var column = [\n                        this.board[3][col],\n                        this.board[2][col],\n                        this.board[1][col],\n                        this.board[0][col]\n                    ];\n                    var _this_compressRow = this.compressRow(column), newRow = _this_compressRow.newRow, gainedScore = _this_compressRow.gainedScore;\n                    for(var row = 0; row < 4; row++)this.board[3 - row][col] = newRow[row];\n                    this.score += gainedScore;\n                }\n                var newState = JSON.stringify(this.board);\n                if (newState !== prevState) this.addRandomTile();\n                this.updateStatus();\n            }\n        },\n        {\n            /**\n   * @returns {number}\n   */ key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            /**\n   * @returns {number[][]}\n   */ key: \"getState\",\n            value: function getState() {\n                return this.board;\n            }\n        },\n        {\n            /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */ key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            /**\n   * Starts the game.\n   */ key: \"start\",\n            value: function start() {\n                this.board = Array(4).fill().map(function() {\n                    return Array(4).fill(0);\n                });\n                this.score = 0;\n                this.status = \"playing\";\n                this.addRandomTile();\n                this.addRandomTile();\n            }\n        },\n        {\n            /**\n   * Resets the game.\n   */ key: \"restart\",\n            value: function restart() {\n                this.start();\n            }\n        },\n        {\n            key: \"addRandomTile\",\n            value: function addRandomTile() {\n                var cells = [];\n                for(var row = 0; row < 4; row++){\n                    for(var col = 0; col < 4; col++)if (this.board[row][col] === 0) cells.push({\n                        row: row,\n                        col: col\n                    });\n                }\n                var randomIndex = Math.floor(Math.random() * cells.length);\n                var _cells_randomIndex = cells[randomIndex], randomRow = _cells_randomIndex.row, randomCol = _cells_randomIndex.col;\n                var newValue = Math.random() < 0.9 ? 2 : 4;\n                this.board[randomRow][randomCol] = newValue;\n            }\n        },\n        {\n            key: \"compressRow\",\n            value: function compressRow(row) {\n                var filtered = row.filter(function(num) {\n                    return num !== 0;\n                });\n                var score = 0;\n                for(var i = 0; i < filtered.length - 1; i++)if (filtered[i] === filtered[i + 1]) {\n                    filtered[i] *= 2;\n                    filtered[i + 1] = 0;\n                    score += filtered[i];\n                    i++;\n                }\n                filtered = filtered.filter(function(num) {\n                    return num !== 0;\n                });\n                var zerosToAdd = 4 - filtered.length;\n                for(var i1 = 0; i1 < zerosToAdd; i1++)filtered.push(0);\n                return {\n                    newRow: filtered,\n                    gainedScore: score\n                };\n            }\n        },\n        {\n            key: \"areRowEqual\",\n            value: function areRowEqual(row1, row2) {\n                return row1.every(function(value, index) {\n                    return value === row2[index];\n                });\n            }\n        },\n        {\n            key: \"updateStatus\",\n            value: function updateStatus() {\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    for(var _iterator = this.board[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var row = _step.value;\n                        if (row.includes(2048)) {\n                            this.status = \"win\";\n                            return;\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                var _iteratorNormalCompletion1 = true, _didIteratorError1 = false, _iteratorError1 = undefined;\n                try {\n                    for(var _iterator1 = this.board[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true){\n                        var row1 = _step1.value;\n                        if (row1.includes(0)) {\n                            this.status = \"playing\";\n                            return;\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError1 = true;\n                    _iteratorError1 = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion1 && _iterator1.return != null) {\n                            _iterator1.return();\n                        }\n                    } finally{\n                        if (_didIteratorError1) {\n                            throw _iteratorError1;\n                        }\n                    }\n                }\n                for(var row2 = 0; row2 < 4; row2++)for(var col = 0; col < 4; col++){\n                    var current = this.board[row2][col];\n                    if (col < 3 && current === this.board[row2][col + 1] || row2 < 3 && current === this.board[row2 + 1][col]) {\n                        this.status = \"playing\";\n                        return;\n                    }\n                }\n                this.status = \"lose\";\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$cells = document.querySelectorAll(\".field-cell\");\nvar $197cd56b15c33885$var$scoreElement = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$messageStart = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$messageWin = document.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$messageLose = document.querySelector(\".message-lose\");\nvar $197cd56b15c33885$var$buttonStart = document.querySelector(\".button.start\");\nvar $197cd56b15c33885$var$renderBoard = function() {\n    var boardGame = $197cd56b15c33885$var$game.getState();\n    var scoreGame = $197cd56b15c33885$var$game.getScore();\n    var statusGame = $197cd56b15c33885$var$game.getStatus();\n    $197cd56b15c33885$var$scoreElement.textContent = scoreGame;\n    for(var i = 0; i < $197cd56b15c33885$var$cells.length; i++){\n        var cell = $197cd56b15c33885$var$cells[i];\n        var row = Math.floor(i / 4);\n        var col = i % 4;\n        var value = boardGame[row][col];\n        if (value === 0) cell.textContent = \"\";\n        else cell.textContent = value;\n        cell.className = \"field-cell\";\n        if (value > 0) cell.classList.add(\"field-cell--\".concat(value));\n    }\n    $197cd56b15c33885$var$messageStart.classList.add(\"hidden\");\n    $197cd56b15c33885$var$messageWin.classList.add(\"hidden\");\n    $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n    if (statusGame === \"win\") $197cd56b15c33885$var$messageWin.classList.remove(\"hidden\");\n    else if (statusGame === \"lose\") $197cd56b15c33885$var$messageLose.classList.remove(\"hidden\");\n};\ndocument.addEventListener(\"keydown\", function(e) {\n    if ($197cd56b15c33885$var$game.getStatus() !== \"playing\") return;\n    switch(e.key){\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n    }\n    $197cd56b15c33885$var$renderBoard();\n});\n$197cd56b15c33885$var$buttonStart.addEventListener(\"click\", function() {\n    var statusButton = $197cd56b15c33885$var$game.getStatus();\n    if (statusButton === \"idle\") $197cd56b15c33885$var$game.start();\n    else $197cd56b15c33885$var$game.restart();\n    $197cd56b15c33885$var$buttonStart.classList.remove(\"start\");\n    $197cd56b15c33885$var$buttonStart.classList.add(\"restart\");\n    $197cd56b15c33885$var$buttonStart.textContent = \"Restart\";\n    $197cd56b15c33885$var$renderBoard();\n});\n\n})();\n//# sourceMappingURL=index.b2db5442.js.map\n","'use strict';\n\n// import Game from '../modules/Game.class';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst cells = document.querySelectorAll('.field-cell');\nconst scoreElement = document.querySelector('.game-score');\n\nconst messageStart = document.querySelector('.message-start');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\n\nconst buttonStart = document.querySelector('.button.start');\n\nconst renderBoard = () => {\n  const boardGame = game.getState();\n  const scoreGame = game.getScore();\n  const statusGame = game.getStatus();\n\n  scoreElement.textContent = scoreGame;\n\n  for (let i = 0; i < cells.length; i++) {\n    const cell = cells[i];\n    const row = Math.floor(i / 4);\n    const col = i % 4;\n    const value = boardGame[row][col];\n\n    if (value === 0) {\n      cell.textContent = '';\n    } else {\n      cell.textContent = value;\n    }\n\n    cell.className = 'field-cell';\n\n    if (value > 0) {\n      cell.classList.add(`field-cell--${value}`);\n    }\n  }\n\n  messageStart.classList.add('hidden');\n  messageWin.classList.add('hidden');\n  messageLose.classList.add('hidden');\n\n  if (statusGame === 'win') {\n    messageWin.classList.remove('hidden');\n  } else if (statusGame === 'lose') {\n    messageLose.classList.remove('hidden');\n  }\n};\n\ndocument.addEventListener('keydown', (e) => {\n  if (game.getStatus() !== 'playing') {\n    return;\n  }\n\n  switch (e.key) {\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n  }\n\n  renderBoard();\n});\n\nbuttonStart.addEventListener('click', () => {\n  const statusButton = game.getStatus();\n\n  if (statusButton === 'idle') {\n    game.start();\n  } else {\n    game.restart();\n  }\n\n  buttonStart.classList.remove('start');\n  buttonStart.classList.add('restart');\n  buttonStart.textContent = 'Restart';\n\n  renderBoard();\n});\n","'use strict';\n\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */\nclass Game {\n  /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */\n  constructor(initialState) {\n    this.board = initialState;\n    this.status = 'idle';\n    this.score = 0;\n  }\n\n  moveLeft() {\n    let moved = false;\n\n    for (let row = 0; row < 4; row++) {\n      const currentRow = this.board[row];\n      const { newRow, gainedScore } = this.compressRow(currentRow);\n\n      if (!this.areRowEqual(currentRow, newRow)) {\n        this.board[row] = newRow;\n        moved = true;\n        this.score += gainedScore;\n      }\n    }\n\n    if (moved) {\n      this.addRandomTile();\n    }\n\n    this.updateStatus();\n  }\n\n  moveRight() {\n    const prevState = JSON.stringify(this.board);\n\n    for (let row = 0; row < 4; row++) {\n      const reverseRow = [...this.board[row]].reverse();\n\n      const { newRow, gainedScore } = this.compressRow(reverseRow);\n\n      this.board[row] = newRow.reverse();\n      this.score += gainedScore;\n    }\n\n    const newState = JSON.stringify(this.board);\n\n    if (newState !== prevState) {\n      this.addRandomTile();\n    }\n\n    this.updateStatus();\n  }\n\n  moveUp() {\n    const prevState = JSON.stringify(this.board);\n\n    for (let col = 0; col < 4; col++) {\n      const column = [\n        this.board[0][col],\n        this.board[1][col],\n        this.board[2][col],\n        this.board[3][col],\n      ];\n\n      const { newRow, gainedScore } = this.compressRow(column);\n\n      for (let row = 0; row < 4; row++) {\n        this.board[row][col] = newRow[row];\n      }\n\n      this.score += gainedScore;\n    }\n\n    const newState = JSON.stringify(this.board);\n\n    if (newState !== prevState) {\n      this.addRandomTile();\n    }\n\n    this.updateStatus();\n  }\n\n  moveDown() {\n    const prevState = JSON.stringify(this.board);\n\n    for (let col = 0; col < 4; col++) {\n      const column = [\n        this.board[3][col],\n        this.board[2][col],\n        this.board[1][col],\n        this.board[0][col],\n      ];\n\n      const { newRow, gainedScore } = this.compressRow(column);\n\n      for (let row = 0; row < 4; row++) {\n        this.board[3 - row][col] = newRow[row];\n      }\n\n      this.score += gainedScore;\n    }\n\n    const newState = JSON.stringify(this.board);\n\n    if (newState !== prevState) {\n      this.addRandomTile();\n    }\n\n    this.updateStatus();\n  }\n\n  /**\n   * @returns {number}\n   */\n  getScore() {\n    return this.score;\n  }\n\n  /**\n   * @returns {number[][]}\n   */\n  getState() {\n    return this.board;\n  }\n\n  /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */\n  getStatus() {\n    return this.status;\n  }\n\n  /**\n   * Starts the game.\n   */\n  start() {\n    this.board = Array(4)\n      .fill()\n      .map(() => Array(4).fill(0));\n\n    this.score = 0;\n    this.status = 'playing';\n\n    this.addRandomTile();\n    this.addRandomTile();\n  }\n\n  /**\n   * Resets the game.\n   */\n  restart() {\n    this.start();\n  }\n\n  addRandomTile() {\n    const cells = [];\n\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (this.board[row][col] === 0) {\n          cells.push({\n            row, col,\n          });\n        }\n      }\n    }\n\n    const randomIndex = Math.floor(Math.random() * cells.length);\n    const { row: randomRow, col: randomCol } = cells[randomIndex];\n\n    const newValue = Math.random() < 0.9 ? 2 : 4;\n\n    this.board[randomRow][randomCol] = newValue;\n  }\n\n  compressRow(row) {\n    let filtered = row.filter((num) => num !== 0);\n    let score = 0;\n\n    for (let i = 0; i < filtered.length - 1; i++) {\n      if (filtered[i] === filtered[i + 1]) {\n        filtered[i] *= 2;\n        filtered[i + 1] = 0;\n        score += filtered[i];\n        i++;\n      }\n    }\n\n    filtered = filtered.filter((num) => num !== 0);\n\n    const zerosToAdd = 4 - filtered.length;\n\n    for (let i = 0; i < zerosToAdd; i++) {\n      filtered.push(0);\n    }\n\n    return {\n      newRow: filtered, gainedScore: score,\n    };\n  }\n\n  areRowEqual(row1, row2) {\n    return row1.every((value, index) => value === row2[index]);\n  }\n\n  updateStatus() {\n    for (const row of this.board) {\n      if (row.includes(2048)) {\n        this.status = 'win';\n\n        return;\n      }\n    }\n\n    for (const row of this.board) {\n      if (row.includes(0)) {\n        this.status = 'playing';\n\n        return;\n      }\n    }\n\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        const current = this.board[row][col];\n\n        if (\n          (col < 3 && current === this.board[row][col + 1])\n          || (row < 3 && current === this.board[row + 1][col])\n        ) {\n          this.status = 'playing';\n\n          return;\n        }\n      }\n    }\n\n    this.status = 'lose';\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n"],"names":["$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$197cd56b15c33885$var$game","protoProps","Game","initialState","instance","Constructor","TypeError","board","status","score","key","value","moved","row","currentRow","_this_compressRow","compressRow","newRow","gainedScore","areRowEqual","addRandomTile","updateStatus","prevState","JSON","stringify","reverseRow","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","reverse","col","column","fill","map","start","cells","push","randomIndex","Math","floor","random","_cells_randomIndex","randomRow","randomCol","newValue","filtered","filter","num","zerosToAdd","i1","row1","row2","every","index","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","includes","err","return","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","current","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","$197cd56b15c33885$var$cells","document","querySelectorAll","$197cd56b15c33885$var$scoreElement","querySelector","$197cd56b15c33885$var$messageStart","$197cd56b15c33885$var$messageWin","$197cd56b15c33885$var$messageLose","$197cd56b15c33885$var$buttonStart","$197cd56b15c33885$var$renderBoard","boardGame","getState","scoreGame","getScore","statusGame","getStatus","textContent","cell","className","classList","add","concat","remove","addEventListener","e","moveLeft","moveRight","moveUp","moveDown","statusButton","restart"],"version":3,"file":"index.b2db5442.js.map"}